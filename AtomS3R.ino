#include <M5Unified.h>
#include "WiFi.h"
#include <esp_wifi.h>
#include "ESP32_NOW.h"
#include <esp_mac.h>
#include <math.h>
#include <Preferences.h>


#define DEVICE_IDENTIFIER "M5AtomS3R"

#define HOME_SCREEN 0
#define PAIRING_SCREEN 1

Preferences preferences;
extern const uint8_t jpg[];
static LGFX_Sprite memlcd(&M5.Lcd);
float fwdWatt_f = 0;
float refWatt_f = 0;
int fwdWatt = 0;
int refWatt = 0;
float freq  = 0;
float swr   = 0;
uint8_t wifiChannel = 1;
uint8_t thisMacAddr[6];
bool sendPairingRequests = false;
unsigned long lastBroadcastMillis = millis();
int currentScreen = HOME_SCREEN;

typedef struct nowDataStruct {
  float fwdMv;
  float refMv;
  int freq;
  float vCal;
  float fCal;
} nowDataStruct;

nowDataStruct nowData;

void drawHomeScreen();

class nannyPeerClass : public ESP_NOW_Peer {
public:
  nannyPeerClass(const uint8_t *mac_addr, uint8_t channel, wifi_interface_t iface, const uint8_t *lmk) : ESP_NOW_Peer(mac_addr, channel, iface, lmk) {}
  ~nannyPeerClass() {}

  bool addPeer() {
    if (!add()) {
      printf("Failed to register the nanny peer");
      return false;
    }
    return true;
  }

  void onReceive(const uint8_t *data, size_t len, bool broadcast) {
    printf("onReceive\n");
    if (sendPairingRequests && (memcmp((char*)data, "accepted", 8) == 0)) {
      // printf("Nanny peer received accept message while in pairing mode\n");
      sendPairingRequests = false;
      drawPairedScreen();
    } else {
      printf("Received measurement from nanny " MACSTR " (%s)\n", MAC2STR(addr()), broadcast ? "broadcast" : "unicast");
      memcpy(&nowData, data, sizeof(nowDataStruct));
      // printf("Measurement fwdMv = %f, refMv = %f\n", nowData.fwdMv, nowData.refMv);
      freq = nowData.freq/1000;
      float freqCorrection = nowData.fCal * log10(freq);
      if ((freq >= 5) && (freq < 15)) {
        fwdWatt_f =  pow(10, (nowData.fwdMv - nowData.vCal + 7.7 + freqCorrection)/250);
        refWatt_f =  pow(10, (nowData.refMv - nowData.vCal + 7.7 + freqCorrection)/250);
      } else {
        fwdWatt_f =  pow(10, (nowData.fwdMv - nowData.vCal + freqCorrection)/250);
        refWatt_f =  pow(10, (nowData.refMv - nowData.vCal + freqCorrection)/250);
      }
      fwdWatt = round(fwdWatt_f);
      refWatt = round(refWatt_f);
      if ((fwdWatt_f > 0) && (refWatt_f > 0)) {
          swr = ((1+sqrt(refWatt_f/fwdWatt_f))/(1-sqrt(refWatt_f/fwdWatt_f)));
      } else {
          swr = (1.0);
      }
      drawHomeScreen();
    }
  }
};
nannyPeerClass * nannyPeer = NULL;

void catchPairedMessage(const esp_now_recv_info_t *info, const uint8_t *data, int len, void *arg) {       // registered by broadcast peer to catch accepted when the peer is unknown (not created already from settings)
  printf("catchPairedMessage %s\n", (char *)data);
  if (!sendPairingRequests) return;
  sendPairingRequests = false;        // hold the sending of pairing requests (assume we are accepted else start sending again)
  if ((memcmp(info->des_addr, ESP_NOW.BROADCAST_ADDR, 6) != 0) && (memcmp((char*)data, "accepted", 8) == 0)) { // if message was sent to peer (not broadcast) and starts with "accepted" -> it is an accepted message
    printf("accept message okay, creating nannyPeer\n");
    delete nannyPeer;                 // if there was a peer delete it for deconstruct
    nannyPeer = new nannyPeerClass(info->src_addr, wifiChannel, WIFI_IF_STA, NULL);
    nannyPeer->addPeer();
    preferences.begin("settings", false);
      preferences.putBytes("savedNanny", nannyPeer->addr(), 6);
    preferences.end();
    drawPairedScreen();
  } else {
    sendPairingRequests = true;
  }
}

class broadcastClass : public ESP_NOW_Peer {
public:
  broadcastClass(uint8_t channel, wifi_interface_t iface, const uint8_t *lmk) : ESP_NOW_Peer(ESP_NOW.BROADCAST_ADDR, channel, iface, lmk) {}
  ~broadcastClass() {remove();}

  bool begin() {
    if (!ESP_NOW.begin() || !add()) {
      printf("Failed to initialize ESP-NOW or register the broadcast peer");
      return false;
    }
    ESP_NOW.onNewPeer(catchPairedMessage, NULL);
    return true;
  }

  bool sendPairRequestMessage(uint8_t ch) {
    setChannel(ch);
    String pairingMessage = DEVICE_IDENTIFIER;
    pairingMessage += '-';
    pairingMessage += String(ch);
    char data[32];
    snprintf(data, sizeof(data), pairingMessage.c_str());
    // printf("Broadcasting message: %s\n", data);
    if (!send((uint8_t *)data, sizeof(data))) {
      printf("Failed to broadcast message");
      return false;
    }
    return true;
  }

  void onReceive(const uint8_t *data, size_t len, bool broadcast) {
    Serial.printf("Broadcast peer: Received message from Nanny " MACSTR " (%s)\n", MAC2STR(addr()), broadcast ? "broadcast" : "unicast");
    Serial.printf("  Message: %s\n", (char *)data);
  }
};
broadcastClass broadcast(wifiChannel, WIFI_IF_STA, NULL);

void setOrientation() {
  int savOrientation = memlcd.getRotation();
  auto imu_update = M5.Imu.update();
  if (imu_update) {
    auto data = M5.Imu.getImuData();
    if ((data.accel.x <= 0.5) && (data.accel.x >= -0.5) && (data.accel.y > 0.5)) {
      memlcd.setRotation(0);
    } else if ((data.accel.x < -0.5) && (data.accel.y <= 0.5) && (data.accel.y >= -0.5)) {
      memlcd.setRotation(3);
    } else if ((data.accel.x > 0.5) && (data.accel.y <= 0.5) && (data.accel.y >= -0.5)) {
      memlcd.setRotation(1);
    } else if ((data.accel.x <= 0.5) && (data.accel.x >= -0.5) && (data.accel.y < -0.5)) {
      memlcd.setRotation(2);
    }
    if (memlcd.getRotation() != savOrientation) {
      if (currentScreen == HOME_SCREEN) {
        drawHomeScreen();
      } else {
        drawPairingScreen();
      }
    }
  } else {
    printf("IMU update failed\n");
  }
}

void drawHomeFrame() {
  memlcd.fillRect(0, 0, 128, 128, 0x000000);
  memlcd.drawRect(0, 0, 20, 128, 0x780F);   // Fwd cel
  memlcd.drawRect(19, 0, 20, 128, 0x780F);  // Ref cel
  memlcd.drawRect(38, 0, 90, 128, 0x780F);  // Power, freq, SWR, Temp cel
  memlcd.setFont(&fonts::FreeSansBold9pt7b);
  memlcd.drawChar( 4, 119, 'F', WHITE, BLACK, 1, 1);
  memlcd.drawChar( 23, 119, 'R', WHITE, BLACK, 1, 1);
}

void drawPairingFrame() {
  memlcd.fillRect(0, 0, 128, 128, 0x000000);
  memlcd.drawRect(0, 0, 128, 128, 0x780F);   // screen border
}

void drawChannel() {
  char stringBuffer [3];
  itoa (wifiChannel,stringBuffer,10);                                                       
  memlcd.drawString(stringBuffer, 64, 32, &fonts::FreeSansBoldOblique24pt7b);   // channel string
  memlcd.drawString("click=chan", 62, 63, &fonts::FreeMono9pt7b);
  memlcd.drawString(" hold=back", 62, 80, &fonts::FreeMono9pt7b);
  memlcd.drawString(" <pairing>", 60, 110, &fonts::Orbitron_Light_24);
}

void drawPower() {
  char stringBuffer [4];
  itoa (fwdWatt,stringBuffer,10);                                                       
  memlcd.drawString(stringBuffer, 80, 29, &fonts::FreeSansBoldOblique24pt7b);   // Fwd Power string
  memlcd.fillRect(4, 105-fwdWatt, 10, fwdWatt, 0x07E0);                         // Fwd bar
  itoa (refWatt,stringBuffer,10);
  memlcd.fillRect(23, 105-refWatt, 10, refWatt, 0xF800);                        // Ref bar
}

void drawFreq() {
  String freqString = String(freq, 3);
  memlcd.drawString(freqString.c_str(), 82, 73, &fonts::FreeSansBoldOblique9pt7b);
}

void drawSwr() {
  if (swr > 3) {
    memlcd.fillRect(44, 86, 78, 30, 0xF800);
  } else if (swr > 2) {
    memlcd.fillRect(44, 86, 78, 30, 0xFDA0);
  }
  String swrString = String(swr, 1);
  memlcd.drawString(swrString.c_str(), 82, 103, &fonts::FreeSansBoldOblique9pt7b);
}

void drawHomeScreen() {
  if (currentScreen != HOME_SCREEN) return;
  drawHomeFrame();
  drawPower();
  drawFreq();
  drawSwr();
  memlcd.pushSprite(0, 0);
}

void drawPairingScreen() {
  drawPairingFrame();
  drawChannel();
  memlcd.pushSprite(0, 0);
}

void drawPairedScreen() {
  drawPairingFrame();
  memlcd.drawString(" hold=back", 62, 80, &fonts::FreeMono9pt7b);
  memlcd.drawString(" <paired>", 60, 110, &fonts::Orbitron_Light_24);
  memlcd.pushSprite(0, 0);
}

//=================================

void setup() {

  auto cfg = M5.config();
  M5.begin(cfg);
  memlcd.setColorDepth(24);
  memlcd.createSprite(128, 128);
  memlcd.setTextDatum(middle_centre);

  for (uint8_t o = 0; o < 4; o++) {
    memlcd.setRotation(o);
    memlcd.drawJpg( jpg, ~0u, 2, 0, memlcd.width(), memlcd.height(), 0, 0, 1.0, 1.0, datum_t::middle_center );
    memlcd.pushSprite(0, 0);
    delay(400);
  }
  drawHomeScreen();

  WiFi.mode(WIFI_STA);
  WiFi.setChannel(wifiChannel);
  while (!WiFi.STA.started()) {
    delay(100);
  }
  WiFi.macAddress(thisMacAddr);

  if (!broadcast.begin()) {
    printf("Failed to initialize broadcast peer\n");
  }

  printf("  MAC Address: %s\n", WiFi.macAddress().c_str());
  printf("  Channel: %d\n", wifiChannel);
  printf("Setup of esp-now complete.\n");

  preferences.begin("settings", false);
    uint8_t empty[6] = {0};
    uint8_t savedNanny[6] = {0};
    uint8_t savedWifiChannel = preferences.getUChar("wifiChannel");
    printf("savedWifiChannel = %d\n", savedWifiChannel);
    preferences.getBytes("savedNanny", savedNanny, 6);
    if (savedWifiChannel && memcmp(savedNanny, empty, sizeof(savedNanny))) {
      printf("we have a saved wifiChannel and Nanny!\n");
      wifiChannel = savedWifiChannel;
      WiFi.setChannel(wifiChannel);
      nannyPeer = new nannyPeerClass(savedNanny, wifiChannel, WIFI_IF_STA, NULL);
      nannyPeer->addPeer();
    }
  preferences.end();

}

void handleButton() {
  M5.update();
  if (M5.BtnA.wasClicked()) {
    if (currentScreen == PAIRING_SCREEN) {
      wifiChannel += 1;
      if (wifiChannel > 14) wifiChannel = 1;
      WiFi.setChannel(wifiChannel);
      drawPairingScreen();
    }
  }
  if (M5.BtnA.wasHold()) {
    switchScreen();
  }
}

void switchScreen() {
  if (currentScreen == HOME_SCREEN) {
    currentScreen = PAIRING_SCREEN;
    drawPairingScreen();
    sendPairingRequests = true;
  } else {
    currentScreen = HOME_SCREEN;
    drawHomeScreen();
    sendPairingRequests = false;
  }
}

void loop() {

  handleButton();
  setOrientation();

  if (sendPairingRequests && ((millis() - lastBroadcastMillis)) > 800) {
    lastBroadcastMillis = millis();
    if (!broadcast.sendPairRequestMessage(wifiChannel)) {
      printf("Failed to broadcast pair request message on ch %d\n", wifiChannel);
    }
  }

  delay(100);

}

constexpr uint8_t jpg[] = {0xff,0xd8,0xff,0xe0,0x00,0x10,0x4a,0x46,0x49,0x46,0x00,0x01,0x02,0x01,0x00,0x48,0x00,0x48,0x00,0x00,
0xff,0xe1,0x00,0xca,0x45,0x78,0x69,0x66,0x00,0x00,0x4d,0x4d,0x00,0x2a,0x00,0x00,0x00,0x08,0x00,0x06,
0x01,0x12,0x00,0x03,0x00,0x00,0x00,0x01,0x00,0x01,0x00,0x00,0x01,0x1a,0x00,0x05,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x56,0x01,0x1b,0x00,0x05,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x5e,0x01,0x28,0x00,0x03,
0x00,0x00,0x00,0x01,0x00,0x02,0x00,0x00,0x02,0x13,0x00,0x03,0x00,0x00,0x00,0x01,0x00,0x01,0x00,0x00,
0x87,0x69,0x00,0x04,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x66,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,
0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x48,0x00,0x00,0x00,0x01,0x00,0x07,0x90,0x00,0x00,0x07,0x00,0x00,
0x00,0x04,0x30,0x32,0x32,0x31,0x91,0x01,0x00,0x07,0x00,0x00,0x00,0x04,0x01,0x02,0x03,0x00,0xa0,0x00,
0x00,0x07,0x00,0x00,0x00,0x04,0x30,0x31,0x30,0x30,0xa0,0x01,0x00,0x03,0x00,0x00,0x00,0x01,0x00,0x01,
0x00,0x00,0xa0,0x02,0x00,0x04,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x60,0xa0,0x03,0x00,0x04,0x00,0x00,
0x00,0x01,0x00,0x00,0x00,0x60,0xa4,0x06,0x00,0x03,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0xff,0xe2,0x07,0xd8,0x49,0x43,0x43,0x5f,0x50,0x52,0x4f,0x46,0x49,0x4c,0x45,0x00,
0x01,0x01,0x00,0x00,0x07,0xc8,0x61,0x70,0x70,0x6c,0x02,0x20,0x00,0x00,0x6d,0x6e,0x74,0x72,0x52,0x47,
0x42,0x20,0x58,0x59,0x5a,0x20,0x07,0xd9,0x00,0x02,0x00,0x19,0x00,0x0b,0x00,0x1a,0x00,0x0b,0x61,0x63,
0x73,0x70,0x41,0x50,0x50,0x4c,0x00,0x00,0x00,0x00,0x61,0x70,0x70,0x6c,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf6,0xd6,0x00,0x01,0x00,0x00,0x00,0x00,
0xd3,0x2d,0x61,0x70,0x70,0x6c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0b,0x64,0x65,0x73,0x63,0x00,0x00,
0x01,0x08,0x00,0x00,0x00,0x6f,0x64,0x73,0x63,0x6d,0x00,0x00,0x01,0x78,0x00,0x00,0x05,0x8a,0x63,0x70,
0x72,0x74,0x00,0x00,0x07,0x04,0x00,0x00,0x00,0x38,0x77,0x74,0x70,0x74,0x00,0x00,0x07,0x3c,0x00,0x00,
0x00,0x14,0x72,0x58,0x59,0x5a,0x00,0x00,0x07,0x50,0x00,0x00,0x00,0x14,0x67,0x58,0x59,0x5a,0x00,0x00,
0x07,0x64,0x00,0x00,0x00,0x14,0x62,0x58,0x59,0x5a,0x00,0x00,0x07,0x78,0x00,0x00,0x00,0x14,0x72,0x54,
0x52,0x43,0x00,0x00,0x07,0x8c,0x00,0x00,0x00,0x0e,0x63,0x68,0x61,0x64,0x00,0x00,0x07,0x9c,0x00,0x00,
0x00,0x2c,0x62,0x54,0x52,0x43,0x00,0x00,0x07,0x8c,0x00,0x00,0x00,0x0e,0x67,0x54,0x52,0x43,0x00,0x00,
0x07,0x8c,0x00,0x00,0x00,0x0e,0x64,0x65,0x73,0x63,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,0x47,0x65,
0x6e,0x65,0x72,0x69,0x63,0x20,0x52,0x47,0x42,0x20,0x50,0x72,0x6f,0x66,0x69,0x6c,0x65,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,0x47,0x65,0x6e,0x65,0x72,0x69,0x63,0x20,0x52,0x47,0x42,
0x20,0x50,0x72,0x6f,0x66,0x69,0x6c,0x65,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6d,0x6c,
0x75,0x63,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1f,0x00,0x00,0x00,0x0c,0x73,0x6b,0x53,0x4b,0x00,0x00,
0x00,0x28,0x00,0x00,0x01,0x84,0x64,0x61,0x44,0x4b,0x00,0x00,0x00,0x24,0x00,0x00,0x01,0xac,0x63,0x61,
0x45,0x53,0x00,0x00,0x00,0x24,0x00,0x00,0x01,0xd0,0x76,0x69,0x56,0x4e,0x00,0x00,0x00,0x24,0x00,0x00,
0x01,0xf4,0x70,0x74,0x42,0x52,0x00,0x00,0x00,0x26,0x00,0x00,0x02,0x18,0x75,0x6b,0x55,0x41,0x00,0x00,
0x00,0x2a,0x00,0x00,0x02,0x3e,0x66,0x72,0x46,0x55,0x00,0x00,0x00,0x28,0x00,0x00,0x02,0x68,0x68,0x75,
0x48,0x55,0x00,0x00,0x00,0x28,0x00,0x00,0x02,0x90,0x7a,0x68,0x54,0x57,0x00,0x00,0x00,0x12,0x00,0x00,
0x02,0xb8,0x6b,0x6f,0x4b,0x52,0x00,0x00,0x00,0x16,0x00,0x00,0x02,0xca,0x6e,0x62,0x4e,0x4f,0x00,0x00,
0x00,0x26,0x00,0x00,0x02,0xe0,0x63,0x73,0x43,0x5a,0x00,0x00,0x00,0x22,0x00,0x00,0x03,0x06,0x68,0x65,
0x49,0x4c,0x00,0x00,0x00,0x1e,0x00,0x00,0x03,0x28,0x72,0x6f,0x52,0x4f,0x00,0x00,0x00,0x24,0x00,0x00,
0x03,0x46,0x64,0x65,0x44,0x45,0x00,0x00,0x00,0x2c,0x00,0x00,0x03,0x6a,0x69,0x74,0x49,0x54,0x00,0x00,
0x00,0x28,0x00,0x00,0x03,0x96,0x73,0x76,0x53,0x45,0x00,0x00,0x00,0x26,0x00,0x00,0x02,0xe0,0x7a,0x68,
0x43,0x4e,0x00,0x00,0x00,0x12,0x00,0x00,0x03,0xbe,0x6a,0x61,0x4a,0x50,0x00,0x00,0x00,0x1a,0x00,0x00,
0x03,0xd0,0x65,0x6c,0x47,0x52,0x00,0x00,0x00,0x22,0x00,0x00,0x03,0xea,0x70,0x74,0x50,0x4f,0x00,0x00,
0x00,0x26,0x00,0x00,0x04,0x0c,0x6e,0x6c,0x4e,0x4c,0x00,0x00,0x00,0x28,0x00,0x00,0x04,0x32,0x65,0x73,
0x45,0x53,0x00,0x00,0x00,0x26,0x00,0x00,0x04,0x0c,0x74,0x68,0x54,0x48,0x00,0x00,0x00,0x24,0x00,0x00,
0x04,0x5a,0x74,0x72,0x54,0x52,0x00,0x00,0x00,0x22,0x00,0x00,0x04,0x7e,0x66,0x69,0x46,0x49,0x00,0x00,
0x00,0x28,0x00,0x00,0x04,0xa0,0x68,0x72,0x48,0x52,0x00,0x00,0x00,0x28,0x00,0x00,0x04,0xc8,0x70,0x6c,
0x50,0x4c,0x00,0x00,0x00,0x2c,0x00,0x00,0x04,0xf0,0x72,0x75,0x52,0x55,0x00,0x00,0x00,0x22,0x00,0x00,
0x05,0x1c,0x65,0x6e,0x55,0x53,0x00,0x00,0x00,0x26,0x00,0x00,0x05,0x3e,0x61,0x72,0x45,0x47,0x00,0x00,
0x00,0x26,0x00,0x00,0x05,0x64,0x00,0x56,0x01,0x61,0x00,0x65,0x00,0x6f,0x00,0x62,0x00,0x65,0x00,0x63,
0x00,0x6e,0x00,0xfd,0x00,0x20,0x00,0x52,0x00,0x47,0x00,0x42,0x00,0x20,0x00,0x70,0x00,0x72,0x00,0x6f,
0x00,0x66,0x00,0x69,0x00,0x6c,0x00,0x47,0x00,0x65,0x00,0x6e,0x00,0x65,0x00,0x72,0x00,0x65,0x00,0x6c,
0x00,0x20,0x00,0x52,0x00,0x47,0x00,0x42,0x00,0x2d,0x00,0x70,0x00,0x72,0x00,0x6f,0x00,0x66,0x00,0x69,
0x00,0x6c,0x00,0x50,0x00,0x65,0x00,0x72,0x00,0x66,0x00,0x69,0x00,0x6c,0x00,0x20,0x00,0x52,0x00,0x47,
0x00,0x42,0x00,0x20,0x00,0x67,0x00,0x65,0x00,0x6e,0x00,0xe8,0x00,0x72,0x00,0x69,0x00,0x63,0x00,0x43,
0x1e,0xa5,0x00,0x75,0x00,0x20,0x00,0x68,0x00,0xec,0x00,0x6e,0x00,0x68,0x00,0x20,0x00,0x52,0x00,0x47,
0x00,0x42,0x00,0x20,0x00,0x43,0x00,0x68,0x00,0x75,0x00,0x6e,0x00,0x67,0x00,0x50,0x00,0x65,0x00,0x72,
0x00,0x66,0x00,0x69,0x00,0x6c,0x00,0x20,0x00,0x52,0x00,0x47,0x00,0x42,0x00,0x20,0x00,0x47,0x00,0x65,
0x00,0x6e,0x00,0xe9,0x00,0x72,0x00,0x69,0x00,0x63,0x00,0x6f,0x04,0x17,0x04,0x30,0x04,0x33,0x04,0x30,
0x04,0x3b,0x04,0x4c,0x04,0x3d,0x04,0x38,0x04,0x39,0x00,0x20,0x04,0x3f,0x04,0x40,0x04,0x3e,0x04,0x44,
0x04,0x30,0x04,0x39,0x04,0x3b,0x00,0x20,0x00,0x52,0x00,0x47,0x00,0x42,0x00,0x50,0x00,0x72,0x00,0x6f,
0x00,0x66,0x00,0x69,0x00,0x6c,0x00,0x20,0x00,0x67,0x00,0xe9,0x00,0x6e,0x00,0xe9,0x00,0x72,0x00,0x69,
0x00,0x71,0x00,0x75,0x00,0x65,0x00,0x20,0x00,0x52,0x00,0x56,0x00,0x42,0x00,0xc1,0x00,0x6c,0x00,0x74,
0x00,0x61,0x00,0x6c,0x00,0xe1,0x00,0x6e,0x00,0x6f,0x00,0x73,0x00,0x20,0x00,0x52,0x00,0x47,0x00,0x42,
0x00,0x20,0x00,0x70,0x00,0x72,0x00,0x6f,0x00,0x66,0x00,0x69,0x00,0x6c,0x90,0x1a,0x75,0x28,0x00,0x52,
0x00,0x47,0x00,0x42,0x82,0x72,0x5f,0x69,0x63,0xcf,0x8f,0xf0,0xc7,0x7c,0xbc,0x18,0x00,0x20,0x00,0x52,
0x00,0x47,0x00,0x42,0x00,0x20,0xd5,0x04,0xb8,0x5c,0xd3,0x0c,0xc7,0x7c,0x00,0x47,0x00,0x65,0x00,0x6e,
0x00,0x65,0x00,0x72,0x00,0x69,0x00,0x73,0x00,0x6b,0x00,0x20,0x00,0x52,0x00,0x47,0x00,0x42,0x00,0x2d,
0x00,0x70,0x00,0x72,0x00,0x6f,0x00,0x66,0x00,0x69,0x00,0x6c,0x00,0x4f,0x00,0x62,0x00,0x65,0x00,0x63,
0x00,0x6e,0x00,0xfd,0x00,0x20,0x00,0x52,0x00,0x47,0x00,0x42,0x00,0x20,0x00,0x70,0x00,0x72,0x00,0x6f,
0x00,0x66,0x00,0x69,0x00,0x6c,0x05,0xe4,0x05,0xe8,0x05,0xd5,0x05,0xe4,0x05,0xd9,0x05,0xdc,0x00,0x20,
0x00,0x52,0x00,0x47,0x00,0x42,0x00,0x20,0x05,0xdb,0x05,0xdc,0x05,0xdc,0x05,0xd9,0x00,0x50,0x00,0x72,
0x00,0x6f,0x00,0x66,0x00,0x69,0x00,0x6c,0x00,0x20,0x00,0x52,0x00,0x47,0x00,0x42,0x00,0x20,0x00,0x67,
0x00,0x65,0x00,0x6e,0x00,0x65,0x00,0x72,0x00,0x69,0x00,0x63,0x00,0x41,0x00,0x6c,0x00,0x6c,0x00,0x67,
0x00,0x65,0x00,0x6d,0x00,0x65,0x00,0x69,0x00,0x6e,0x00,0x65,0x00,0x73,0x00,0x20,0x00,0x52,0x00,0x47,
0x00,0x42,0x00,0x2d,0x00,0x50,0x00,0x72,0x00,0x6f,0x00,0x66,0x00,0x69,0x00,0x6c,0x00,0x50,0x00,0x72,
0x00,0x6f,0x00,0x66,0x00,0x69,0x00,0x6c,0x00,0x6f,0x00,0x20,0x00,0x52,0x00,0x47,0x00,0x42,0x00,0x20,
0x00,0x67,0x00,0x65,0x00,0x6e,0x00,0x65,0x00,0x72,0x00,0x69,0x00,0x63,0x00,0x6f,0x66,0x6e,0x90,0x1a,
0x00,0x52,0x00,0x47,0x00,0x42,0x63,0xcf,0x8f,0xf0,0x65,0x87,0x4e,0xf6,0x4e,0x00,0x82,0x2c,0x00,0x20,
0x00,0x52,0x00,0x47,0x00,0x42,0x00,0x20,0x30,0xd7,0x30,0xed,0x30,0xd5,0x30,0xa1,0x30,0xa4,0x30,0xeb,
0x03,0x93,0x03,0xb5,0x03,0xbd,0x03,0xb9,0x03,0xba,0x03,0xcc,0x00,0x20,0x03,0xc0,0x03,0xc1,0x03,0xbf,
0x03,0xc6,0x03,0xaf,0x03,0xbb,0x00,0x20,0x00,0x52,0x00,0x47,0x00,0x42,0x00,0x50,0x00,0x65,0x00,0x72,
0x00,0x66,0x00,0x69,0x00,0x6c,0x00,0x20,0x00,0x52,0x00,0x47,0x00,0x42,0x00,0x20,0x00,0x67,0x00,0x65,
0x00,0x6e,0x00,0xe9,0x00,0x72,0x00,0x69,0x00,0x63,0x00,0x6f,0x00,0x41,0x00,0x6c,0x00,0x67,0x00,0x65,
0x00,0x6d,0x00,0x65,0x00,0x65,0x00,0x6e,0x00,0x20,0x00,0x52,0x00,0x47,0x00,0x42,0x00,0x2d,0x00,0x70,
0x00,0x72,0x00,0x6f,0x00,0x66,0x00,0x69,0x00,0x65,0x00,0x6c,0x0e,0x42,0x0e,0x1b,0x0e,0x23,0x0e,0x44,
0x0e,0x1f,0x0e,0x25,0x0e,0x4c,0x00,0x20,0x00,0x52,0x00,0x47,0x00,0x42,0x00,0x20,0x0e,0x17,0x0e,0x31,
0x0e,0x48,0x0e,0x27,0x0e,0x44,0x0e,0x1b,0x00,0x47,0x00,0x65,0x00,0x6e,0x00,0x65,0x00,0x6c,0x00,0x20,
0x00,0x52,0x00,0x47,0x00,0x42,0x00,0x20,0x00,0x50,0x00,0x72,0x00,0x6f,0x00,0x66,0x00,0x69,0x00,0x6c,
0x00,0x69,0x00,0x59,0x00,0x6c,0x00,0x65,0x00,0x69,0x00,0x6e,0x00,0x65,0x00,0x6e,0x00,0x20,0x00,0x52,
0x00,0x47,0x00,0x42,0x00,0x2d,0x00,0x70,0x00,0x72,0x00,0x6f,0x00,0x66,0x00,0x69,0x00,0x69,0x00,0x6c,
0x00,0x69,0x00,0x47,0x00,0x65,0x00,0x6e,0x00,0x65,0x00,0x72,0x00,0x69,0x01,0x0d,0x00,0x6b,0x00,0x69,
0x00,0x20,0x00,0x52,0x00,0x47,0x00,0x42,0x00,0x20,0x00,0x70,0x00,0x72,0x00,0x6f,0x00,0x66,0x00,0x69,
0x00,0x6c,0x00,0x55,0x00,0x6e,0x00,0x69,0x00,0x77,0x00,0x65,0x00,0x72,0x00,0x73,0x00,0x61,0x00,0x6c,
0x00,0x6e,0x00,0x79,0x00,0x20,0x00,0x70,0x00,0x72,0x00,0x6f,0x00,0x66,0x00,0x69,0x00,0x6c,0x00,0x20,
0x00,0x52,0x00,0x47,0x00,0x42,0x04,0x1e,0x04,0x31,0x04,0x49,0x04,0x38,0x04,0x39,0x00,0x20,0x04,0x3f,
0x04,0x40,0x04,0x3e,0x04,0x44,0x04,0x38,0x04,0x3b,0x04,0x4c,0x00,0x20,0x00,0x52,0x00,0x47,0x00,0x42,
0x00,0x47,0x00,0x65,0x00,0x6e,0x00,0x65,0x00,0x72,0x00,0x69,0x00,0x63,0x00,0x20,0x00,0x52,0x00,0x47,
0x00,0x42,0x00,0x20,0x00,0x50,0x00,0x72,0x00,0x6f,0x00,0x66,0x00,0x69,0x00,0x6c,0x00,0x65,0x06,0x45,
0x06,0x44,0x06,0x41,0x00,0x20,0x06,0x2a,0x06,0x39,0x06,0x31,0x06,0x4a,0x06,0x41,0x00,0x20,0x00,0x52,
0x00,0x47,0x00,0x42,0x00,0x20,0x06,0x27,0x06,0x44,0x06,0x39,0x06,0x27,0x06,0x45,0x00,0x00,0x74,0x65,
0x78,0x74,0x00,0x00,0x00,0x00,0x43,0x6f,0x70,0x79,0x72,0x69,0x67,0x68,0x74,0x20,0x32,0x30,0x30,0x37,
0x20,0x41,0x70,0x70,0x6c,0x65,0x20,0x49,0x6e,0x63,0x2e,0x2c,0x20,0x61,0x6c,0x6c,0x20,0x72,0x69,0x67,
0x68,0x74,0x73,0x20,0x72,0x65,0x73,0x65,0x72,0x76,0x65,0x64,0x2e,0x00,0x58,0x59,0x5a,0x20,0x00,0x00,
0x00,0x00,0x00,0x00,0xf3,0x52,0x00,0x01,0x00,0x00,0x00,0x01,0x16,0xcf,0x58,0x59,0x5a,0x20,0x00,0x00,
0x00,0x00,0x00,0x00,0x74,0x4d,0x00,0x00,0x3d,0xee,0x00,0x00,0x03,0xd0,0x58,0x59,0x5a,0x20,0x00,0x00,
0x00,0x00,0x00,0x00,0x5a,0x75,0x00,0x00,0xac,0x73,0x00,0x00,0x17,0x34,0x58,0x59,0x5a,0x20,0x00,0x00,
0x00,0x00,0x00,0x00,0x28,0x1a,0x00,0x00,0x15,0x9f,0x00,0x00,0xb8,0x36,0x63,0x75,0x72,0x76,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x01,0x01,0xcd,0x00,0x00,0x73,0x66,0x33,0x32,0x00,0x00,0x00,0x00,0x00,0x01,
0x0c,0x42,0x00,0x00,0x05,0xde,0xff,0xff,0xf3,0x26,0x00,0x00,0x07,0x92,0x00,0x00,0xfd,0x91,0xff,0xff,
0xfb,0xa2,0xff,0xff,0xfd,0xa3,0x00,0x00,0x03,0xdc,0x00,0x00,0xc0,0x6c,0xff,0xc0,0x00,0x11,0x08,0x00,
0x60,0x00,0x60,0x03,0x01,0x22,0x00,0x02,0x11,0x01,0x03,0x11,0x01,0xff,0xc4,0x00,0x1f,0x00,0x00,0x01,
0x05,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x02,0x03,0x04,0x05,
0x06,0x07,0x08,0x09,0x0a,0x0b,0xff,0xc4,0x00,0xb5,0x10,0x00,0x02,0x01,0x03,0x03,0x02,0x04,0x03,0x05,
0x05,0x04,0x04,0x00,0x00,0x01,0x7d,0x01,0x02,0x03,0x00,0x04,0x11,0x05,0x12,0x21,0x31,0x41,0x06,0x13,
0x51,0x61,0x07,0x22,0x71,0x14,0x32,0x81,0x91,0xa1,0x08,0x23,0x42,0xb1,0xc1,0x15,0x52,0xd1,0xf0,0x24,
0x33,0x62,0x72,0x82,0x09,0x0a,0x16,0x17,0x18,0x19,0x1a,0x25,0x26,0x27,0x28,0x29,0x2a,0x34,0x35,0x36,
0x37,0x38,0x39,0x3a,0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5a,
0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6a,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x83,0x84,0x85,0x86,
0x87,0x88,0x89,0x8a,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9a,0xa2,0xa3,0xa4,0xa5,0xa6,0xa7,0xa8,
0xa9,0xaa,0xb2,0xb3,0xb4,0xb5,0xb6,0xb7,0xb8,0xb9,0xba,0xc2,0xc3,0xc4,0xc5,0xc6,0xc7,0xc8,0xc9,0xca,
0xd2,0xd3,0xd4,0xd5,0xd6,0xd7,0xd8,0xd9,0xda,0xe1,0xe2,0xe3,0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,0xea,0xf1,
0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,0xf9,0xfa,0xff,0xc4,0x00,0x1f,0x01,0x00,0x03,0x01,0x01,0x01,0x01,
0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,
0x0a,0x0b,0xff,0xc4,0x00,0xb5,0x11,0x00,0x02,0x01,0x02,0x04,0x04,0x03,0x04,0x07,0x05,0x04,0x04,0x00,
0x01,0x02,0x77,0x00,0x01,0x02,0x03,0x11,0x04,0x05,0x21,0x31,0x06,0x12,0x41,0x51,0x07,0x61,0x71,0x13,
0x22,0x32,0x81,0x08,0x14,0x42,0x91,0xa1,0xb1,0xc1,0x09,0x23,0x33,0x52,0xf0,0x15,0x62,0x72,0xd1,0x0a,
0x16,0x24,0x34,0xe1,0x25,0xf1,0x17,0x18,0x19,0x1a,0x26,0x27,0x28,0x29,0x2a,0x35,0x36,0x37,0x38,0x39,
0x3a,0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5a,0x63,0x64,0x65,
0x66,0x67,0x68,0x69,0x6a,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x82,0x83,0x84,0x85,0x86,0x87,0x88,
0x89,0x8a,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9a,0xa2,0xa3,0xa4,0xa5,0xa6,0xa7,0xa8,0xa9,0xaa,
0xb2,0xb3,0xb4,0xb5,0xb6,0xb7,0xb8,0xb9,0xba,0xc2,0xc3,0xc4,0xc5,0xc6,0xc7,0xc8,0xc9,0xca,0xd2,0xd3,
0xd4,0xd5,0xd6,0xd7,0xd8,0xd9,0xda,0xe2,0xe3,0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,0xea,0xf2,0xf3,0xf4,0xf5,
0xf6,0xf7,0xf8,0xf9,0xfa,0xff,0xdb,0x00,0x43,0x00,0x1c,0x1c,0x1c,0x1c,0x1c,0x1c,0x30,0x1c,0x1c,0x30,
0x44,0x30,0x30,0x30,0x44,0x5c,0x44,0x44,0x44,0x44,0x5c,0x74,0x5c,0x5c,0x5c,0x5c,0x5c,0x74,0x8c,0x74,
0x74,0x74,0x74,0x74,0x74,0x8c,0x8c,0x8c,0x8c,0x8c,0x8c,0x8c,0x8c,0xa8,0xa8,0xa8,0xa8,0xa8,0xa8,0xc4,
0xc4,0xc4,0xc4,0xc4,0xdc,0xdc,0xdc,0xdc,0xdc,0xdc,0xdc,0xdc,0xdc,0xdc,0xff,0xdb,0x00,0x43,0x01,0x22,
0x24,0x24,0x38,0x34,0x38,0x60,0x34,0x34,0x60,0xe6,0x9c,0x80,0x9c,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,
0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,
0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,0xe6,
0xe6,0xe6,0xe6,0xff,0xdd,0x00,0x04,0x00,0x06,0xff,0xda,0x00,0x0c,0x03,0x01,0x00,0x02,0x11,0x03,0x11,
0x00,0x3f,0x00,0xe9,0x28,0xa2,0x8a,0x00,0x28,0xa2,0xa9,0xdc,0xdd,0x18,0x98,0x43,0x08,0xdf,0x2b,0x74,
0x5f,0x4f,0x73,0xed,0x40,0x16,0x9e,0x44,0x8d,0x77,0x48,0xc1,0x47,0xa9,0xaa,0x27,0x53,0xb5,0xce,0x10,
0xb3,0xff,0x00,0xba,0xa4,0xd4,0x12,0x58,0xe6,0x17,0x9e,0xed,0xbc,0xd9,0x02,0x92,0x3f,0xba,0x38,0xec,
0x2a,0xed,0x90,0x1f,0x64,0x8b,0xfd,0xc1,0x40,0x10,0xae,0xa7,0x68,0x4e,0x18,0x94,0xff,0x00,0x78,0x11,
0x57,0x91,0xd1,0xd7,0x72,0x10,0xc0,0xf7,0x14,0xac,0xaa,0xc3,0x0c,0x01,0x1e,0xf5,0x9e,0xf6,0x3e,0x5b,
0x19,0x6c,0x9b,0xca,0x7f,0x4f,0xe1,0x3f,0x51,0x40,0x1a,0x34,0x55,0x3b,0x5b,0xb5,0xb8,0xdd,0x1b,0x8d,
0xb2,0xa7,0x0c,0xbf,0xe1,0x57,0x28,0x00,0xa2,0x8a,0x28,0x03,0xff,0xd0,0xe9,0x28,0xa2,0x8a,0x00,0xad,
0x75,0x70,0x2d,0xa1,0x32,0x63,0x2c,0x78,0x51,0xea,0x4f,0x4a,0x65,0x9d,0xb1,0x85,0x4c,0x92,0xfc,0xd2,
0xbf,0x2c,0x7f,0xa5,0x50,0xb9,0x33,0xdc,0x5d,0x33,0xc1,0xc8,0xb5,0xc1,0x03,0xd5,0xbb,0x8f,0xca,0xac,
0x1b,0xff,0x00,0x38,0x2a,0x59,0x8d,0xd2,0x38,0xc9,0xcf,0x45,0xfa,0xd0,0x05,0xcb,0x9f,0xf8,0xf6,0x93,
0xfd,0xd3,0xfc,0xa9,0x96,0x5f,0xf1,0xe9,0x17,0xfb,0x83,0xf9,0x54,0x03,0x4f,0x59,0x39,0xba,0x76,0x95,
0x8f,0xbe,0x07,0xe0,0x05,0x07,0x4e,0x8d,0x39,0xb5,0x76,0x89,0xbd,0x8e,0x47,0xe2,0x0d,0x00,0x68,0xd5,
0x3b,0xcb,0x86,0x89,0x44,0x50,0xf3,0x2c,0x9c,0x28,0xfe,0xbf,0x85,0x42,0xb7,0xc6,0x0d,0xd1,0xdf,0x0d,
0xae,0xa3,0x20,0x8e,0x8c,0x3d,0xbd,0xe9,0xd6,0x71,0x3b,0xb1,0xbc,0x9c,0x7c,0xef,0xd0,0x7f,0x75,0x7b,
0x0a,0x00,0x89,0xb4,0xff,0x00,0x2a,0x15,0x7b,0x73,0xfb,0xe8,0xfe,0x6d,0xdf,0xde,0x3d,0xc1,0xfa,0xd5,
0xeb,0x69,0xd6,0xe6,0x11,0x2a,0xf1,0x9e,0xa3,0xd0,0xf7,0x15,0x3d,0x66,0xaf,0xfa,0x2d,0xf9,0x4f,0xe0,
0x9c,0x64,0x7b,0x30,0xeb,0xf9,0xd0,0x06,0x95,0x14,0x51,0x40,0x1f,0xff,0xd1,0xe9,0x29,0xb2,0x38,0x8d,
0x19,0xcf,0x45,0x04,0xfe,0x54,0xea,0xa3,0xa9,0x36,0xdb,0x29,0x48,0xee,0x31,0xf9,0xf1,0x40,0x15,0xed,
0x9f,0xec,0xba,0x79,0xb9,0x7e,0x59,0xf2,0xff,0x00,0x52,0x7a,0x55,0xab,0x1b,0x7f,0x22,0x2d,0xcf,0xfe,
0xb1,0xfe,0x67,0x3e,0xe6,0xab,0x5c,0x2e,0x4d,0xad,0xaf,0x62,0x41,0x23,0xd9,0x45,0x6a,0xd0,0x01,0x45,
0x53,0xb8,0xbb,0xf2,0x9c,0x41,0x12,0x19,0x25,0x23,0x3b,0x47,0x61,0xea,0x4d,0x54,0x98,0x5d,0x88,0xcc,
0xd7,0x73,0x08,0x90,0x7f,0x0c,0x7d,0x7e,0x99,0x34,0x01,0x6e,0xf6,0xdd,0x6e,0x62,0x28,0x31,0xbd,0x7e,
0x65,0xf6,0x22,0xa4,0xb5,0x9f,0xed,0x10,0x2c,0xbd,0x0f,0x42,0x3d,0x08,0xeb,0x54,0xf4,0xdb,0x43,0x0a,
0x9b,0x89,0x33,0xbe,0x4e,0xc4,0xe4,0x81,0x4f,0xb5,0xfd,0xdd,0xd5,0xc4,0x1d,0xb2,0x1c,0x7f,0xc0,0xba,
0xd0,0x06,0x8d,0x67,0xea,0x4a,0x44,0x02,0x75,0xfb,0xd1,0x30,0x61,0xfd,0x6b,0x42,0xa1,0xb8,0x40,0xf6,
0xf2,0x21,0xee,0xa7,0xf9,0x50,0x04,0xaa,0x43,0x28,0x61,0xd0,0x8c,0xd2,0xd5,0x4b,0x16,0xdf,0x67,0x13,
0x1f,0xee,0x8f,0xd2,0xad,0xd0,0x07,0xff,0xd2,0xe9,0x2a,0xa5,0xec,0x0f,0x71,0x6e,0xd1,0x47,0x8c,0x92,
0x3a,0xfb,0x1a,0xb7,0x45,0x00,0x66,0xc7,0x0d,0xdb,0xdd,0x24,0xf7,0x1b,0x00,0x40,0x40,0xdb,0x9e,0xf5,
0xa5,0x45,0x14,0x01,0x92,0x92,0xc7,0x6d,0x7d,0x39,0xb8,0x21,0x77,0x80,0x54,0x9e,0xe0,0x53,0xa3,0x0d,
0x7f,0x30,0xb8,0x71,0x88,0x50,0xfc,0x80,0xff,0x00,0x11,0xf5,0x35,0xa2,0xf1,0xc7,0x27,0xfa,0xc5,0x0d,
0x8f,0x51,0x9a,0x7e,0x31,0xc0,0xa0,0x02,0xb1,0xe4,0x37,0x23,0x51,0x7f,0xb3,0x05,0x27,0xcb,0x19,0xdd,
0xf5,0xad,0x8a,0xce,0xb5,0xfd,0xe5,0xe5,0xc4,0xdd,0x81,0x08,0x3f,0x0e,0xb4,0x00,0x9b,0xb5,0x5f,0xee,
0x45,0xf9,0x9a,0x6b,0x3e,0xa9,0xb4,0xe5,0x22,0xc6,0x3d,0x4d,0x6a,0x54,0x37,0x2d,0xb2,0xde,0x47,0x3d,
0x94,0xff,0x00,0x2a,0x00,0xad,0xa6,0x7f,0xc7,0x8c,0x7f,0x43,0xfc,0xea,0xfd,0x54,0xb0,0x52,0x96,0x71,
0x29,0xfe,0xe8,0xfd,0x6a,0xdd,0x00,0x7f,0xff,0xd3,0xe9,0x28,0xa2,0x8a,0x00,0x28,0xa2,0x8a,0x00,0x28,
0xa2,0x8a,0x00,0xad,0x77,0x3f,0xd9,0xa0,0x32,0x0e,0x58,0xf0,0xa3,0xd4,0x9e,0x94,0x59,0xc0,0x6d,0xe0,
0x58,0xdb,0x96,0xea,0xc7,0xdc,0xf5,0xa9,0x27,0x85,0x2e,0x22,0x31,0x3f,0x43,0xfa,0x7b,0xd5,0x6b,0x39,
0x9c,0x96,0xb5,0x9f,0xfd,0x6c,0x7d,0xff,0x00,0xbc,0x3b,0x1a,0x00,0xbd,0x59,0xfa,0x9b,0x1f,0xb3,0xf9,
0x2b,0xf7,0xa5,0x60,0x83,0xf1,0xad,0x0a,0xcc,0xff,0x00,0x8f,0xad,0x43,0x23,0x94,0xb7,0x1f,0xf8,0xf1,
0xff,0x00,0x0a,0x00,0xd2,0x55,0x0a,0xa1,0x47,0x40,0x31,0x4b,0x45,0x14,0x01,0xff,0xd4,0xe9,0x28,0xa2,
0x8a,0x00,0x28,0xa2,0x8a,0x00,0x28,0xa2,0x8a,0x00,0x2a,0x95,0xe4,0x0e,0xe0,0x4f,0x07,0x12,0xc7,0xc8,
0xf7,0x1d,0xc5,0x5d,0xa2,0x80,0x33,0x24,0xd4,0x15,0xad,0xd4,0xc1,0xcc,0xb2,0x7c,0xaa,0xbd,0xc1,0xef,
0x9f,0xa5,0x5a,0xb5,0xb7,0x16,0xd0,0x88,0xfa,0x9e,0xac,0x7d,0x49,0xeb,0x4a,0x96,0xb0,0x47,0x33,0x4e,
0xab,0x87,0x6e,0xa6,0xac,0x50,0x01,0x45,0x14,0x50,0x07,0xff,0xd9
};
